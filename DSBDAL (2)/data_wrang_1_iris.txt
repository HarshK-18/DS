#!/usr/bin/env python
# coding: utf-8

# **DATA WRANGLING-I**
# ## 1. Problem Statement
# Perform the following operations using Python on any open source dataset (e.g., data.csv)
# 1. Import all the required Python Libraries.
# 2. Locate an open source data from the web (e.g., https://www.kaggle.com). Provide a clear
#  description of the data and its source (i.e., URL of the web site).
# 3. Load the Dataset into pandas dataframe.
# 4. Data Preprocessing: check for missing values in the data using pandas isnull(), describe()
# function to get some initial statistics. Provide variable descriptions. Types of variables etc.
# Check the dimensions of the data frame.
# 5. Data Formatting and Data Normalization: Summarize the types of variables by checking
# the data types (i.e., character, numeric, integer, factor, and logical) of the variables in the
# data set. If variables are not in the correct data type, apply proper type conversions.
# 6. Turn categorical variables into quantitative variables in Python.

# **Import all the required Python Libraries.**

# In[1]:


import pandas as pd


# 
# **Locate an open source data from the web (e.g., https://www.kaggle.com). Provide a clear description of the data**

# ## 2. Data Collection
# ### Loading the data

# In[2]:


iris=pd.read_csv("Iris.csv")


# In[3]:


iris


# ## 3. Exploratory Data Analysis
# **Data Preprocessing:**

# In[4]:


iris.head


# In[5]:


iris.head()


# In[6]:


iris.tail()


# In[7]:


iris.info()


# In[8]:


iris.describe(include="all")


# In[9]:


iris.shape


# In[10]:


iris.columns


# In[11]:


iris.petal_length


# In[ ]:


iris[:6]


# In[ ]:


iris.loc[0:2]


# In[ ]:


iris.iloc[1:3]


# In[ ]:


iris.isnull()


# In[ ]:


iris.isnull().any()


# In[ ]:


iris.isnull().sum()


# In[ ]:


iris.sepal_length.isnull().sum()


# **Data Formatting and Data Normalization:**

# In[ ]:


iris.dtypes


# In[ ]:


from sklearn import preprocessing


# In[ ]:


iris.head()


# In[ ]:


x=iris.iloc[:,:4]
x


# In[ ]:


min_max_scaler = preprocessing.MinMaxScaler()


# In[ ]:


x_scaled = min_max_scaler.fit_transform(x)


# In[ ]:





# In[ ]:


df_normalized = pd.DataFrame(x_scaled)


# In[ ]:





# In[ ]:


df_normalized


# **Turn categorical variables into quantitative variables in Python**

# In[ ]:


from sklearn import preprocessing


# In[ ]:


iris['species'].unique()


# In[ ]:


label_encoder = preprocessing.LabelEncoder()


# In[ ]:


iris['species']= label_encoder.fit_transform(iris['species'])


# In[ ]:


iris['species'].unique()

